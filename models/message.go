package models

import (
	"database/sql"
	"time"
)

// Message represents an anonymous chat message.
type Message struct {
	ID        int       // The unique identifier of the message (generated by the database).
	UserID    string    // The unique identifier of the user who sent the message.
	Nickname  string    // The nickname of the user (optional).
	Text      string    // The content of the message.
	Timestamp time.Time // The timestamp when the message was created.
}

// SaveMessage saves a new message to the database.
func SaveMessage(db *sql.DB, message Message) error {
	message.Timestamp = time.Now()

	_, err := db.Exec(
		"INSERT INTO anonchat.messages (user_id, nickname, text, timestamp) VALUES ($1, $2, $3, $4)",
		message.UserID, message.Nickname, message.Text, message.Timestamp,
	)
	if err != nil {
		return err
	}

	return nil
}

// GetMessagesByUsername returns the list of messages for a specific username from the database.
func GetMessagesByUsername(db *sql.DB, userID string) ([]Message, error) {
	var userMessages []Message

	rows, err := db.Query("SELECT id, user_id, nickname, text, timestamp FROM anonchat.messages WHERE user_id = $1", userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()

	for rows.Next() {
		var message Message
		err := rows.Scan(&message.ID, &message.UserID, &message.Nickname, &message.Text, &message.Timestamp)
		if err != nil {
			return nil, err
		}
		userMessages = append(userMessages, message)
	}

	return userMessages, nil
}
